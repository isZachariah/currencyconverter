[{"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Inputs/NumberInput.tsx":"1","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Inputs/Select.tsx":"2","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Layout/Footer.tsx":"3","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Layout/Layout.tsx":"4","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Layout/Navbar.tsx":"5","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/TabLayout/Frame.tsx":"6","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/TabLayout/TabsRow.tsx":"7","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Tabs/Table.tsx":"8","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/404.tsx":"9","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/_app.tsx":"10","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/api/convert.ts":"11","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/api/symbols.ts":"12","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/index.tsx":"13","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Inputs/SelectsAndSwap.tsx":"14","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Tabs/converter.tsx":"15","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/alerts.tsx":"16","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/charts.tsx":"17","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/convert.tsx":"18","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/index.tsx":"19","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/send.tsx":"20"},{"size":763,"mtime":1670512311087,"results":"21","hashOfConfig":"22"},{"size":2752,"mtime":1670810210583,"results":"23","hashOfConfig":"22"},{"size":252,"mtime":1670824101093,"results":"24","hashOfConfig":"22"},{"size":359,"mtime":1668105401608,"results":"25","hashOfConfig":"22"},{"size":1715,"mtime":1670809360334,"results":"26","hashOfConfig":"22"},{"size":578,"mtime":1670825668351,"results":"27","hashOfConfig":"22"},{"size":2306,"mtime":1670824101102,"results":"28","hashOfConfig":"22"},{"size":2424,"mtime":1670823612849,"results":"29","hashOfConfig":"22"},{"size":630,"mtime":1670824101113,"results":"30","hashOfConfig":"22"},{"size":738,"mtime":1670823224019,"results":"31","hashOfConfig":"22"},{"size":730,"mtime":1670818850481,"results":"32","hashOfConfig":"22"},{"size":1183,"mtime":1670612829354,"results":"33","hashOfConfig":"22"},{"size":778,"mtime":1670824282581,"results":"34","hashOfConfig":"22"},{"size":2149,"mtime":1670817843205,"results":"35","hashOfConfig":"22"},{"size":7515,"mtime":1670825404240,"results":"36","hashOfConfig":"22"},{"size":484,"mtime":1670824101109,"results":"37","hashOfConfig":"22"},{"size":7911,"mtime":1670825404235,"results":"38","hashOfConfig":"22"},{"size":2887,"mtime":1670824101099,"results":"39","hashOfConfig":"22"},{"size":811,"mtime":1670825057241,"results":"40","hashOfConfig":"22"},{"size":1166,"mtime":1670824101117,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v3r8qp",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"109"},"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Inputs/NumberInput.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Inputs/Select.tsx",["110"],[],"import {useState} from \"react\";\nimport styles from '../../styles/select.module.css';\nimport '/node_modules/currency-flags/dist/currency-flags.css';\nimport type {CurrencySymbol} from \"../../pages/api/symbols\";\n\n\ntype SelectProps = {\n    id: string\n    options: CurrencySymbol[] | undefined\n    value?: CurrencySymbol\n    onChange: (value: CurrencySymbol | undefined) => void\n}\n\n\nexport function Select({id, value, onChange, options}: SelectProps) {\n    const [isOpen, setIsOpen] = useState(false)\n    const [highLightedIndex, setHighlightedIndex] = useState(0)\n\n    function clearOptions() {\n        onChange(undefined)\n    }\n\n    function selectOption(option: CurrencySymbol) {\n        onChange(option)\n    }\n\n    function isOptionSelected(option: CurrencySymbol) {\n        return option === value\n    }\n\n    return (\n        <div\n            onBlur={() => setIsOpen(false)}\n            onClick={() => setIsOpen(prev => !prev)} tabIndex={0}\n            className={`${styles.container} rounded border-gray-700 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50`}>\n            <div className={'flex flex-row gap-1 w-full gap-1 '}>\n                <div className={`currency-flag currency-flag-${value?.value.toLowerCase()} text-center m-auto`}/>\n                <span className={`${styles.value} `}>{`${value?.value} - ${value?.label}`}</span>\n            </div>\n            <button\n                onClick={(e) => {\n                    e.stopPropagation()\n                    clearOptions()\n\n                }}\n                className={styles['clear-btn']}>&times;</button>\n            <div className={`${styles.divider}`}></div>\n            <div className={styles.caret}></div>\n            <ul className={`${styles.options} ${isOpen ? styles.show : ''}`}>{\n                options?.map((option, index) => (\n                    <li\n                        onClick={e => {\n                            e.stopPropagation()\n                            selectOption(option)\n                            setIsOpen(false)\n                        }}\n                        id={id}\n                        value={option.value}\n                        onMouseEnter={() => setHighlightedIndex(index)}\n                        key={option.value}\n                        className={`${styles.option} ${isOptionSelected(option) ? styles.selected : ''}`}>{\n                        <div className={'flex flex-row gap-1 w-full gap-1'}>\n                            <div className={`currency-flag currency-flag-${option.value.toLowerCase()} my-auto`}></div>\n                            <span>{option.label}</span>\n                        </div>\n\n\n                    }</li>\n                ))\n            }</ul>\n        </div>\n    )\n}","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Layout/Footer.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Layout/Layout.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Layout/Navbar.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/TabLayout/Frame.tsx",["111"],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/TabLayout/TabsRow.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Tabs/Table.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/404.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/_app.tsx",["112"],[],"import '../styles/globals.css';\nimport { Hydrate, QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\nimport Layout from \"../components/Layout/Layout\";\nimport type { AppProps } from 'next/app';\nimport React from \"react\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n    const [queryClient] = React.useState(() => new QueryClient)\n\n  return (\n      <QueryClientProvider client={queryClient}>\n          <Hydrate state={pageProps.dehydratedState}>\n              <Layout>\n                  <Component {...pageProps} />\n              </Layout>\n          </Hydrate>\n          {/*<ReactQueryDevtools />*/}\n      </QueryClientProvider>\n  )\n\n\n}\n","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/api/convert.ts",["113","114","115"],[],"import type { NextApiRequest, NextApiResponse } from 'next'\n\ntype Data = {\n    from: string,\n    to: string,\n    amount: string\n}\n\n\n\n// const APIKEY = process.env.API_KEY\nconst APIKEY = '2029506bcdbfb303b4b31f63'\nconst APIRequest = (from: string | undefined, to: string | undefined, amount?: string | undefined) => ((\n    amount === undefined\n        ? `https://v6.exchangerate-api.com/v6/${APIKEY}/pair/${from}/${to}`\n        : `https://v6.exchangerate-api.com/v6/${APIKEY}/pair/${from}/${to}/${amount}`\n))\n\n// export default function handler(\n//     req: NextApiRequest,\n//     res: NextApiResponse<Data>,\n//\n//     data: Query\n//\n// ) {\n//     fetch(APIRequest(data.from, data.to, data.amount))\n// }\n//\n\n\n\nexport { APIRequest }","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/api/symbols.ts",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/index.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Inputs/SelectsAndSwap.tsx",["116","117","118"],[],"import {Select} from \"./Select\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRightLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport {CurrencySymbol} from \"../../pages/api/symbols\";\n\n\ninterface SASProps {\n    symbols: CurrencySymbol[]\n    base: CurrencySymbol\n    setBase: (value: CurrencySymbol) => void\n    target: CurrencySymbol\n    setTarget: (value: CurrencySymbol) => void\n    setConverting: (value: boolean) => void\n}\n\nconst SelectsAndSwap = ({symbols, base, setBase, target, setTarget, setConverting}) => {\n    function swap(e: React.MouseEvent<HTMLButtonElement>) {\n        e.preventDefault()\n        setBase(target)\n        setTarget(base)\n    }\n    return (\n        <div>\n            <div className='flex flex-col align-left justify-end'>\n                <label className='' htmlFor={'from'}>From</label>\n                <Select\n                    id={'from'}\n                    options={symbols}\n                    value={base}\n                    onChange={e => {\n                        setConverting(false)\n                        setBase(e)\n                    }}\n                />\n            </div>\n            <div className='flex flex-col align-left justify-end'>\n                <button\n                    className='shadow-sm rounded-full border border-gray-300 h-12 w-12 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50'\n                    onClick={(e) => swap(e)}\n                >\n                    <FontAwesomeIcon className='text-[#00a2e0] h-4 w-4 justify-center text-center align-middle m-auto' icon={faRightLeft} />\n                </button>\n\n            </div>\n            <div className='flex flex-col align-left justify-end'>\n                <label className='' htmlFor={'to'}>To</label>\n                <Select\n                    id={'to'}\n                    options={symbols}\n                    value={target}\n                    onChange={e => {\n                        setConverting(false)\n                        setTarget(e)\n                    }}\n                />\n            </div>\n        </div>\n\n    )\n}","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/components/Tabs/converter.tsx",["119"],[],"import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faRightLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport type {FC} from \"react\";\nimport React, {useState} from \"react\";\nimport {Select} from \"../Inputs/Select\";\nimport {APIRequest} from \"../../pages/api/convert\";\nimport {NumberInput} from \"../Inputs/NumberInput\";\nimport type {CurrencySymbol} from \"../../pages/api/symbols\";\nimport {useQuery, useQueryClient} from \"@tanstack/react-query\";\nimport {router} from \"next/client\";\nimport {useRouter} from \"next/router\";\n\n\ntype ConvertProps = {\n    base: CurrencySymbol\n    setBase: (value: CurrencySymbol) => void\n    target: CurrencySymbol\n    setTarget: (value: CurrencySymbol) => void\n    conversionRate: number\n    setConversionRate: (value: number) => void\n    converting: boolean\n    setConverting: (value: boolean) => void\n}\n\ntype ConversionData = { base_code: string, target_code: string, conversion_rate: number, conversion_result: number }\n\nconst Converter: FC<ConvertProps> = ({\n             base,\n             setBase,\n             target,\n             setTarget,\n             conversionRate,\n             setConversionRate,\n             converting,\n             setConverting\n}) => {\n    const queryClient = useQueryClient();\n    const [amount, setAmount] = useState<string>('1')\n    const [conversionResult, setConversionResult] = useState(0)\n\n    const router = useRouter()\n\n    const symbolsQuery = useQuery<CurrencySymbol[]>(\n        ['symbols'],\n        () => fetch('/api/symbols').then((response) => response.json())\n    )\n\n    const handleSubmit = (e: React.FormEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n\n        async function fetchConversion() {\n            const data = await fetch(APIRequest(base?.value, target?.value, amount))\n            return await data.json()\n        }\n\n        const data = queryClient.getQueryData<ConversionData>([`conversion`, base?.value, target?.value, amount])\n\n        if (data === undefined) {\n            fetchConversion()\n                .then((data) => {\n                    const {base_code, target_code, conversion_rate, conversion_result} = data;\n                    setRoute(base_code, target_code, conversion_rate, router)\n                    queryClient.setQueryData([`conversion`, base?.value, target?.value, amount], data)\n                    setConversionRate(conversion_rate)\n                    setConversionResult(conversion_result)\n                    setConverting(true)\n                }).catch((err) => {\n                console.log(err)\n            })\n        } else {\n            const {base_code, target_code, conversion_rate, conversion_result} = data;\n            setRoute(base_code, target_code, conversion_rate, router)\n            setConversionRate(conversion_rate)\n            setConversionResult(conversion_result)\n            setConverting(true)\n        }\n    }\n\n    function amountOnChange(amount: string) {\n        setConverting(false)\n        setAmount(amount)\n    }\n\n    function swap(e: React.MouseEvent<HTMLButtonElement>) {\n        e.preventDefault()\n        setBase(target)\n        setTarget(base)\n    }\n\n    return (\n        <div className='flex flex-col justify-center align-middle p-4'>\n            <form className='flex flex-col justify-center align-middle'>\n                <div className='flex flex-row justify-between align-middle flex-wrap gap-2 my-12'>\n                    <NumberInput value={amount} onChange={amountOnChange} id={'amount'} label={'Amount'}/>\n                    <div className='flex flex-col align-left justify-end'>\n                        <label className='' htmlFor={'from'}>From</label>\n                        <Select\n                            id={'from'}\n                            options={symbolsQuery.data}\n                            value={base}\n                            onChange={e => {\n                                setConverting(false)\n                                setBase(e)\n                            }}\n                        />\n                    </div>\n                    <div className='flex flex-col align-left justify-end'>\n                        <button\n                            className='shadow-sm rounded-full border border-gray-300 h-12 w-12 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50'\n                            onClick={(e) => swap(e)}\n                        >\n                            <FontAwesomeIcon\n                                className='text-[#00a2e0] h-4 w-4 justify-center text-center align-middle m-auto'\n                                icon={faRightLeft}/>\n                        </button>\n\n                    </div>\n                    <div className='flex flex-col align-left justify-end'>\n                        <label className='' htmlFor={'to'}>To</label>\n                        <Select\n                            id={'to'}\n                            options={symbolsQuery.data}\n                            value={target}\n                            onChange={e => {\n                                setConverting(false)\n                                setTarget(e)\n                            }}\n                        />\n                    </div>\n                </div>\n                <div className='flex flex-row justify-end'>\n                    <button className='bg-sky-500 rounded-md px-4 py-2 hover:bg-gray-300 hover:text-blue-900 text-white'\n                            type={\"submit\"}\n                            disabled={amount === undefined || base === undefined || target === undefined}\n                            onClick={(e) => handleSubmit(e)}\n\n                    >Convert\n                    </button>\n                </div>\n            </form>\n            <div>{converting &&\n                <div>\n                    <p className='text-md'>{`${amount} ${base?.label}=`}</p> {/*1.00 US DOLLAR=*/}\n                    <p className='text-3xl my-1'>{`${conversionResult.toString().slice(0, 3)}`}<span\n                        className='text-gray-300'>{conversionResult.toString().slice(4)}</span>{`${target?.label}`}\n                    </p> {/* 1.02 <span>55728</span> Euros*/}\n                    <p className='my-6 text-gray-400'>{`1 ${target?.value} = ${conversionRate.toString()}`}</p> {/*1 Eur = 0.974020 USD*/}\n                </div>\n            }</div>\n        </div>\n\n    )\n}\n\nconst setRoute = (base_code, target_code, amount, router) => {\n    const url = {\n        pathname: router.pathname,\n        query: {\n            ...router.query,\n            from: base_code as string,\n            to: target_code as string,\n            amount: amount as string,\n        }\n    }\n    router.push(url, undefined, {shallow: true})\n}\n\nexport const options = [\n    {value: 'AUD', label: 'Australian Dollar', currencySymbol: '$'},\n    {value: 'CAD', label: 'Canadian Dollar', currencySymbol: '$'},\n    {value: 'CLP', label: 'Chilean Peso', currencySymbol: '$'},\n    {value: 'CNY', label: 'Chinese Yuan', currencySymbol: '¥'},\n    {value: 'EUR', label: 'Euro', currencySymbol: '€'},\n    {value: 'GBP', label: 'British Pound Sterling', currencySymbol: '£'},\n    {value: 'INR', label: 'Indian Rupee', currencySymbol: '₹'},\n    {value: 'JPY', label: 'Japanese Yen', currencySymbol: '¥'},\n    {value: 'RUB', label: 'Russian Ruble', currencySymbol: '₽'},\n    {value: 'USD', label: 'United States Dollar', currencySymbol: '$'},\n    {value: 'ZAR', label: 'South African Rand', currencySymbol: 'R'},\n]\n\nexport default Converter","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/alerts.tsx",["120"],[],"import React, {FC} from \"react\";\nimport Frame from \"../../components/TabLayout/Frame\";\n\nconst Alerts: FC = () => {\n    return (\n        <main className={'flex flex-col justify-center align-middle -my-60'}>\n            <h1 className={'text-white text-6xl mx-auto'}>Currency Alerts</h1>\n            <Frame>\n                <div className={'bg-white mx-auto rounded-lg flex flex-col shadow-lg'}>\n\n                </div>\n            </Frame>\n        </main>\n    )\n}\n\nexport default Alerts","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/charts.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/convert.tsx",["121"],[],"import React, {FC, useState} from \"react\";\nimport Converter, {options} from \"../../components/Tabs/converter\";\nimport {Table} from \"../../components/Tabs/Table\";\nimport Frame from '../../components/TabLayout/Frame'\nimport Head from \"next/head\";\n\nconst Convert: FC = () => {\n    const [base, setBase] = useState<typeof options[0]>(options[0])\n    const [target, setTarget] = useState<typeof options[3]>(options[3])\n    const [conversionRate, setConversionRate] = useState(0)\n    const [converting, setConverting] = useState(false)\n\n    return (\n        <>\n            <Head>\n                <title>XE Convert Currency</title>\n                <meta name=\"description\" content=\"Created by Zachariah Magee for SD230 Web Programming\"/>\n                <link rel=\"icon\" href=\"/public/favicon.ico\"/>\n            </Head>\n            <main className={'flex flex-col justify-center align-middle -my-60'}>\n                <h1 className={'text-white text-6xl mx-auto'}>Currency Converter</h1>\n                <div className={''}>\n                    <Frame>\n                        <div className={'bg-white mx-auto rounded-lg flex flex-col shadow-lg'}>\n                            {\n                                <Converter base={base} setBase={setBase}\n                                           target={target} setTarget={setTarget}\n                                           conversionRate={conversionRate} setConversionRate={setConversionRate}\n                                           converting={converting} setConverting={setConverting}\n                                />\n                            }\n                        </div>\n                    </Frame>\n                    <div>\n                        <div className='w-4/5 mx-auto grid grid-cols-2 justify-center align-middle rounded-b-xl'>\n                            <div>\n                                {\n                                    converting && <Table\n                                        base={base}\n                                        target={target}\n                                        conversionRate={conversionRate}\n                                        direction={true}\n                                    />\n                                }\n                            </div>\n                            <div>\n                                {\n                                    converting && <Table\n                                        base={target}\n                                        target={base}\n                                        conversionRate={conversionRate}\n                                        direction={false}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </>\n    )\n}\n\n\nexport default Convert","/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/index.tsx",[],[],"/Users/zachariahmagee/Development/typescript/NextJS/currency-converter/src/pages/currency/send.tsx",["122"],[],"import React, {FC} from \"react\";\nimport Frame from \"../../components/TabLayout/Frame\";\nimport Head from \"next/head\";\n\nconst Send: FC = () => {\n    return (\n        <>\n            <Head>\n                <title>XE Currency Converter</title>\n                <meta name=\"description\" content=\"Created by Zachariah Magee for SD230 Web Programming\"/>\n                <link rel=\"icon\" href=\"/public/favicon.ico\"/>\n            </Head>\n            <main className={'flex flex-col justify-center align-middle -my-60'}>\n                <h1 className={'text-white text-6xl mx-auto'}>Send Money</h1>\n\n                <Frame>\n                    <div className={'bg-white mx-auto rounded-lg flex flex-col shadow-lg'}>\n                        <div className={''}>\n                            <div className={'bg-white mx-auto rounded-lg flex flex-col shadow-lg'}>\n                                <form>\n                                    <label>You Send</label>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </Frame>\n            </main>\n        </>\n    )\n}\n\nexport default Send",{"ruleId":"123","severity":1,"message":"124","line":17,"column":12,"nodeType":"125","messageId":"126","endLine":17,"endColumn":28},{"ruleId":"123","severity":1,"message":"127","line":12,"column":11,"nodeType":"125","messageId":"126","endLine":12,"endColumn":15},{"ruleId":"123","severity":1,"message":"128","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":28},{"ruleId":"123","severity":1,"message":"129","line":1,"column":15,"nodeType":"125","messageId":"126","endLine":1,"endColumn":29},{"ruleId":"123","severity":1,"message":"130","line":1,"column":31,"nodeType":"125","messageId":"126","endLine":1,"endColumn":46},{"ruleId":"123","severity":1,"message":"131","line":3,"column":6,"nodeType":"125","messageId":"126","endLine":3,"endColumn":10},{"ruleId":"132","severity":1,"message":"133","line":5,"column":1,"nodeType":"134","messageId":"135","endLine":5,"endColumn":56,"fix":"136"},{"ruleId":"123","severity":1,"message":"137","line":8,"column":11,"nodeType":"125","messageId":"126","endLine":8,"endColumn":19},{"ruleId":"123","severity":1,"message":"138","line":17,"column":7,"nodeType":"125","messageId":"126","endLine":17,"endColumn":21},{"ruleId":"123","severity":1,"message":"139","line":10,"column":9,"nodeType":"125","messageId":"126","endLine":10,"endColumn":15},{"ruleId":"132","severity":1,"message":"140","line":1,"column":1,"nodeType":"134","messageId":"141","endLine":1,"endColumn":33,"fix":"142"},{"ruleId":"132","severity":1,"message":"140","line":1,"column":1,"nodeType":"134","messageId":"141","endLine":1,"endColumn":43,"fix":"143"},{"ruleId":"132","severity":1,"message":"140","line":1,"column":1,"nodeType":"134","messageId":"141","endLine":1,"endColumn":33,"fix":"144"},"@typescript-eslint/no-unused-vars","'highLightedIndex' is assigned a value but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","'ReactQueryDevtools' is defined but never used.","'NextApiRequest' is defined but never used.","'NextApiResponse' is defined but never used.","'Data' is defined but never used.","@typescript-eslint/consistent-type-imports","All imports in the declaration are only used as types. Use `import type`.","ImportDeclaration","typeOverValue",{"range":"145","text":"146"},"'SASProps' is defined but never used.","'SelectsAndSwap' is assigned a value but never used.","'router' is defined but never used.","Import \"FC\" is only used as types.","aImportIsOnlyTypes",{"range":"147","text":"148"},{"range":"149","text":"150"},{"range":"151","text":"148"},[193,193]," type",[0,18],"import type {FC} from \"react\";\nimport React",[0,18],"import type {FC} from \"react\";\nimport React, {",[0,18]]